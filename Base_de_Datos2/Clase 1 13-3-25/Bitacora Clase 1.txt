Bitacora Clase01 Grupo n3c 13032025 
===================================
*/
-- comentario a la linea
USE  Northwind
SET DATEFORMAT DMY  --  dd/mm/aaaa     03 / 05 / 2025
GO

--Select * from orders

-- ALIAS asignar a:   TABLAS   y a los ATRIBUTOS ( directos , como Calculados)
select OrderDetails.OrderID, Orders.CustomerID, Customers.CompanyName,
		OrderDetails.ProductId Producto, ProductName, 
		OrderDetails.UnitPrice As PrecioUnitario,
		Quantity  as Cantidad,
		OrderDetails.UnitPrice * Quantity  AS Calculo1,
		OrderDetails.UnitPrice * Quantity * (1-Discount) as Calculo2, 
		Orders.OrderDate
from OrderDetails, Products, Orders, Customers
where OrderDetails.ProductID = Products.ProductID
   and OrderDetails.OrderID = Orders.OrderID 
   and  Orders.CustomerID = Customers.CustomerID
   -- las ordenes de Noviembre de 1996
   -- And YEAR(Orders.OrderDate) = 1996 And MONTH(Orders.OrderDate) =11
   and  Orders.OrderDate BETWEEN '01/11/1996' AND '30/11/1996'



--En formato JOINS
select od.OrderID,od.ProductId Producto, ProductName, 
		od.UnitPrice  As PrecioUnitario,
		od.Quantity  as Cantidad,
		od.UnitPrice * od.Quantity  AS Calculo1,
		od.UnitPrice * od.Quantity * (1-od.Discount) as Calculo2
from OrderDetails od  INNER JOIN Products p
					ON od.ProductID = p.ProductID

-- EN JORMATO JOINs

select od.OrderID, o.CustomerID, c.CompanyName,
		od.ProductId Producto, p.ProductName, 
		od.UnitPrice As PrecioUnitario,
		od.Quantity  as Cantidad,
		od.UnitPrice * od.Quantity  AS Calculo1,
		od.UnitPrice * od.Quantity * (1-od.Discount) as Calculo2, 
		o.OrderDate
from OrderDetails od  join  Products p ON od.ProductID = p.ProductID	
					  JOIN Orders o    ON od.OrderID = o.OrderID
					  JOIN Customers c ON o.CustomerID = c.CustomerID
where  -- en este formato utilizamos el where solo para filtrar los datos de las tablas del FRom
   -- las ordenes de Noviembre de 1996
   --  YEAR(Orders.OrderDate) = 1996 And MONTH(Orders.OrderDate) =11
     o.OrderDate BETWEEN '01/11/1996' AND '30/11/1996'
	 and o.CustomerID = 'QUICK'

-- Funciones de aGREGACION :   count , sum , avg, max, min   / distinct

select Count(*) from Customers
select Count(distinct o.CustomerID)  from Orders o

--  Quiero mostrar a todos los Clientes con o sin ordenes colocadas

-- LEFT/RIGHT  OUTER JOIN
select  c.CustomerID, c.CompanyName, Count(o.OrderID) as OrdenesColocadas,
		MAX(o.OrderDate) as UltimaFechaOrden
from 	
	 Orders o RIGHT JOIN    Customers c
	 ON o.CustomerID = c.CustomerID

GROUP BY c.CustomerID, c.CompanyName


-- LEFT/RIGHT  OUTER JOIN  'EXCLUDING'
select  c.CustomerID, c.CompanyName, Count(o.OrderID) as OrdenesColocadas,
		MAX(o.OrderDate) as UltimaFechaOrden
from 	
	 Orders o RIGHT JOIN    Customers c
	 ON o.CustomerID = c.CustomerID

GROUP BY c.CustomerID, c.CompanyName
HAVING   MAX(o.OrderDate) IS NULL

--  Lo visto Hoy
-- CONSULTAS MULTIPLES. JOINS  Intro AGREGACIONES  Filtrados WHERE y Grupos HAVING
-- proxima Clase: Comandos de DML : INSERT  INTO,  DELETE FROM,  UPDATE // UPDATE FROM
--                FUNCIONES de Agregacion y Filtro Having 
--				  VISTAS (VIEWS).Introduccion a SUBCONSULTAS

--ventas a Clientes y a Mostrador (no Cliente identificado)
-- 1) Ver los Clientes que no han colocado ordenes
-- 2) Ver las Ventas realizadas a No Clientes

SELECT  c.CustomerID, c.CompanyName, Count(o.OrderID) as OrdenesColocadas,
		MAX(o.OrderDate) as UltimaFechaOrden
FROM Customers c LEFT JOIN Orders o  ON o.CustomerID = c.CustomerID
GROUP BY c.CustomerID, c.CompanyName


INsert into ORDERS (CustomerID,EmployeeID )  values (null, null)
select max(orderID)  from Orders
select *   from Orders  order by  OrderID desc

--  right JOin  Excluding
SELECT  c.CustomerID, c.CompanyName, o.OrderID,		o.OrderDate
FROM Customers c RIGHT JOIN Orders o  ON o.CustomerID = c.CustomerID
WHERE c.customerID is NULL
order by o.OrderID  DESC

-- fin clase 01