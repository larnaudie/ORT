/* BITACORA CLASE 10 Grupo N3C 05/06/2025
==========================================
Temas: DIA: INICIO TEMA TRIGGERS (Teorico ppt: hasta Tablas INSERTED y DELETED
			PPT: TRIGGERS // Disparadores
			Practico 5 Triggers // Disparadores
==========================================
*/
USE nORTHWIND
SET DATEFORMAT DMY

/* Practico 5 TRIGGERS  // DISPARADORES


Utilizando la base de datos NorthWind resolver los siguientes ejercicios: 

1.   Antes de ingresar un nuevo Shipper, forzar a que siempre se cargue el nombre 
(CompanyName) el letras mayúsculas 

2.   
Antes de ingresar un nuevo Shipper, forzar a que siempre se cargue el nombre 
(CompanyName) el letras mayúsculas 
Crear una tabla AUDITORIA con la siguiente estructura: 
idAudit (autonumérico) 
tabla (tabla que interviene en la auditoria) 
host (se obtiene con la función host_name()) 
fecha (se obtiene con la función getdate()) 
operación (Puede tomar los valores ‘Insert’,’Delete’,’Update’) 
anterior (es el valor anterior a los cambios) 
actual (es el nuevo valor luego de los cambios) 
observaciones (nota breve de auditoria) 
Luego de un cambio en el CompanyName de la tabla Customers registrar dicho 
cambio en la tabla Auditoria
*/

/*
1.   Antes de ingresar un nuevo Shippers, forzar a que siempre se cargue el nombre 
(CompanyName) el letras mayúsculas 
-- Considerando Multiples Registros
*/

go
ALTER TRIGGER TR_N3C_p5e1
ON ShippersTemp
--momento  y  EVENTOS
INSTEAD OF INSERT
AS
BEGIN
	--  Implementar la Accion a llevar a cabo
	SET NOCOUNT ON
	Select * from Inserted
	insert into SHIPPERStemp (ShipperID2,CompanyName2,Phone2,CodigoPostal2)
	        select i.shipperID2,UPPER(i.CompanyName2),i.Phone2,i.CodigoPostal2
			       from INSERTED i 

END
GO

--
--  En algun lado ejecutan un comando 

Select * from ShippersTemp
INSERT INTO SHIPPERSTemp (ShipperID2,CompanyName2,Phone2,CodigoPostal2) 
             VALUES (21,'N3c_Embarcador1',null,null),
			        (22,'N3C_Embarcador2',null,null),
					(23,'N3c_Embarcador3',null,null)
INSERT INTO SHIPPERSTemp (ShipperID2,CompanyName2,Phone2,CodigoPostal2) 
             VALUES (31,'N3c_Embarcador1',null,null),
			        (32,'N3C_Embarcador2',null,null),
					(33,'N3c_Embarcador3',null,null)
--
--dELETE FROM sHIPPERSTEMP WHERE sHIPPERid2 > 20
Select * from ShippersTemp

/*
2.   Crear una tabla AUDITORIA con la siguiente estructura: 

idAudit (autonumérico) 
tabla (tabla que interviene en la auditoria) 
host (se obtiene con la función host_name()) 
fecha (se obtiene con la función getdate()) 
operación (Puede tomar los valores ‘Insert’,’Delete’,’Update’) 
anterior (es el valor anterior a los cambios) 
actual (es el nuevo valor luego de los cambios) 
observaciones (nota breve de auditoria) 

Luego de un cambio en el CompanyName de la tabla Customers registrar dicho 
cambio en la tabla Auditoria
*/

go 
Create Table AUDITORIA_N3C
(
	idAudit [int] IDENTITY(1,1) PRIMARY KEY NOT NULL,
	tabla [nvarchar](40) NOT NULL,
	Host [nvarchar](40) NOT NULL,
	Fecha datetime not NULL,
	Operacion [nvarchar](10) not NULL,
	anterior [nvarchar](40)  NULL,
	actual [nvarchar](40)  NULL,
	observaciones [nvarchar](100)  NULL
)
GO
-- Luego de un cambio en el CompanyName de la tabla Customers registrar dicho 
-- cambio en la tabla Auditoria
--  TEner EN CuEntA multiples registros en: UPDATE, INSERT, DELETE

CREATE TRIGGER TR_N3C_P5E2
ON Customers
AFTER UPDATE, INSERT, DELETE
AS 
BEGIN
	-- DETERMINAR PORQUE TIPO DE EVENTO VENIMOS:
	IF EXISTS ( select * from Inserted)  and EXISTS (select * from Deleted) 
		BEGIN -- Estamos en un UPDATE
			INSERT INTO AUDITORIA_N3C 
				select 'CUSTOMERS',host_name(),GETDATE(),'UPDATE',
				       d.CompanyName, i.CompanyName, 'sin comentarios'
				from inserted i  JOIN deleted d  ON i.CustomerID = d.CustomerID
		END
	IF EXISTS ( select * from Inserted)  and  NOT EXISTS (select * from Deleted) 
		BEGIN -- Estamos en un INSERT
			INSERT INTO AUDITORIA_N3C 
				select 'CUSTOMERS',host_name(),GETDATE(),'INSERT',
				       null, i.CompanyName, 'sin comentarios'
				from inserted i 
		END
	IF not EXISTS ( select * from Inserted)  and EXISTS (select * from Deleted) 
		BEGIN -- Estamos en un delete
			INSERT INTO AUDITORIA_N3C 
				select 'CUSTOMERS',host_name(),GETDATE(),'DELETE',
				       d.CompanyName,null, 'sin comentarios'
				from  deleted d  
		END
END
GO 

-- Script de prueba del trigger

select * from Customers
SELECT * from AUDITORIA_N3C
DELETE FROM Customers Where CustomerID = 'AAAXX'
UPDATE Customers SET CompanyName = 'ClienteDelN3C 'Where CustomerID = 'AAAZZ'

INSERT INTO Customers (CustomerID,CompanyName) 
Values ('AAAXX','Cliente2delN3C'),
	   ('AAAXY','Cliente3delN3C'),
	   ('AAAXZ','Cliente4delN3C')

UPDATE Customers SET CompanyName =  UPPER(CompanyName) Where CustomerID LIKE 'AAA%'
SELECT * from AUDITORIA_N3C